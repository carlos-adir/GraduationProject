[1,0]<stdout>:on 40 x 40 x 40 grid:  error |u-uexact|_inf = 4.4434e-05
[1,1]<stdout>:on 40 x 40 x 40 grid:  error |u-uexact|_inf = 4.4434e-05
[1,0]<stdout>:Processor 0 took 0.244881 CPU seconds
[1,0]<stdout>:**************************************** ***********************************************************************************************************************
[1,0]<stdout>:***                                WIDEN YOUR WINDOW TO 160 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document                                 ***
[1,0]<stdout>:****************************************************************************************************************************************************************
[1,0]<stdout>:
[1,0]<stdout>:------------------------------------------------------------------ PETSc Performance Summary: -------------------------------------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:./poisson3D_ksp on a arch-linux-c-opt named carlosadir with 1 processor, by carlosadir Sun Jul  3 22:34:54 2022
[1,0]<stdout>:Using Petsc Release Version 3.17.3, unknown 
[1,0]<stdout>:
[1,0]<stdout>:                         Max       Max/Min     Avg       Total
[1,0]<stdout>:Time (sec):           2.451e-01     1.000   2.451e-01
[1,0]<stdout>:Objects:              5.900e+01     1.000   5.900e+01
[1,0]<stdout>:Flops:                1.439e+08     1.000   1.439e+08  1.439e+08
[1,0]<stdout>:Flops/sec:            5.869e+08     1.000   5.869e+08  5.869e+08
[1,0]<stdout>:MPI Msg Count:        0.000e+00     0.000   0.000e+00  0.000e+00
[1,0]<stdout>:MPI Msg Len (bytes):  0.000e+00     0.000   0.000e+00  0.000e+00
[1,0]<stdout>:MPI Reductions:       0.000e+00     0.000
[1,0]<stdout>:
[1,0]<stdout>:Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
[1,0]<stdout>:                            e.g., VecAXPY() for real vectors of length N --> 2N flops
[1,0]<stdout>:                            and VecAXPY() for complex vectors of length N --> 8N flops
[1,0]<stdout>:
[1,0]<stdout>:Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
[1,0]<stdout>:                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
[1,0]<stdout>: 0:      Main Stage: 2.4509e-01 100.0%  1.4386e+08 100.0%  0.000e+00   0.0%  0.000e+00        0.0%  0.000e+00   0.0%
[1,0]<stdout>:
[1,0]<stdout>:------------------------------------------------------------------------------------------------------------------------
[1,0]<stdout>:See the 'Profiling' chapter of the users' manual for details on interpreting output.
[1,0]<stdout>:Phase summary info:
[1,0]<stdout>:   Count: number of times phase was executed
[1,0]<stdout>:   Time and Flop: Max - maximum over all processors
[1,1]<stdout>:Processor 0 took 0.246200 CPU seconds
[1,0]<stdout>:                  Ratio - ratio of maximum to minimum over all processors
[1,0]<stdout>:   Mess: number of messages sent
[1,0]<stdout>:   AvgLen: average message length (bytes)
[1,0]<stdout>:   Reduct: number of global reductions
[1,0]<stdout>:   Global: entire computation
[1,0]<stdout>:   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
[1,0]<stdout>:      %T - percent time in this phase         %F - percent flop in this phase
[1,0]<stdout>:      %M - percent messages in this phase     %L - percent message lengths in this phase
[1,0]<stdout>:      %R - percent reductions in this phase
[1,0]<stdout>:   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
[1,0]<stdout>:------------------------------------------------------------------------------------------------------------------------
[1,1]<stdout>:**************************************** ***********************************************************************************************************************
[1,0]<stdout>:Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total[1,1]<stdout>:***                                WIDEN YOUR WINDOW TO 160 CHARACTERS.  Use 'enscript -r -fCourier9' to print this document                                 ***
[1,1]<stdout>:****************************************************************************************************************************************************************
[1,1]<stdout>:
[1,1]<stdout>:------------------------------------------------------------------ PETSc Performance Summary: -------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:./poisson3D_ksp on a arch-linux-c-opt named carlosadir with 1 processor, by carlosadir Sun Jul  3 22:34:54 2022
[1,0]<stdout>:
[1,0]<stdout>:                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s[1,0]<stdout>:
[1,1]<stdout>:Using Petsc Release Version 3.17.3, unknown 
[1,1]<stdout>:
[1,1]<stdout>:                         Max       Max/Min     Avg       Total
[1,1]<stdout>:Time (sec):           2.465e-01     1.000   2.465e-01
[1,1]<stdout>:Objects:              5.900e+01     1.000   5.900e+01
[1,1]<stdout>:Flops:                1.439e+08     1.000   1.439e+08  1.439e+08
[1,1]<stdout>:Flops/sec:            5.837e+08     1.000   5.837e+08  5.837e+08
[1,1]<stdout>:MPI Msg Count:        0.000e+00     0.000   0.000e+00  0.000e+00
[1,1]<stdout>:MPI Msg Len (bytes):  0.000e+00     0.000   0.000e+00  0.000e+00
[1,1]<stdout>:MPI Reductions:       0.000e+00     0.000
[1,1]<stdout>:
[1,1]<stdout>:Flop counting convention: 1 flop = 1 real number operation of type (multiply/divide/add/subtract)
[1,1]<stdout>:                            e.g., VecAXPY() for real vectors of length N --> 2N flops
[1,1]<stdout>:                            and VecAXPY() for complex vectors of length N --> 8N flops
[1,1]<stdout>:
[1,1]<stdout>:Summary of Stages:   ----- Time ------  ----- Flop ------  --- Messages ---  -- Message Lengths --  -- Reductions --
[1,1]<stdout>:                        Avg     %Total     Avg     %Total    Count   %Total     Avg         %Total    Count   %Total
[1,1]<stdout>: 0:      Main Stage: 2.4645e-01 100.0%  1.4386e+08 100.0%  0.000e+00   0.0%  0.000e+00        0.0%  0.000e+00   0.0%
[1,0]<stdout>:------------------------------------------------------------------------------------------------------------------------[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:--- Event Stage 0: Main Stage
[1,0]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:------------------------------------------------------------------------------------------------------------------------
[1,0]<stdout>:MatMult               27 1.0 3.4148e-02 1.0 2.19e+07 1.0 0.0e+00 0.0e+00 0.0e+00 14 15  0  0  0  14 15  0  0  0   643[1,1]<stdout>:See the 'Profiling' chapter of the users' manual for details on interpreting output.
[1,0]<stdout>:
[1,1]<stdout>:Phase summary info:
[1,0]<stdout>:MatSolve              27 1.0 4.0871e-02 1.0 2.19e+07 1.0 0.0e+00 0.0e+00 0.0e+00 17 15  0  0  0  17 15  0  0  0   537
[1,1]<stdout>:   Count: number of times phase was executed
[1,0]<stdout>:MatLUFactorNum         1 1.0 3.2941e-03 1.0 1.22e+06 1.0 0.0e+00 0.0e+00 0.0e+00  1  1  0  0  0   1  1  0  0  0   369[1,1]<stdout>:   Time and Flop: Max - maximum over all processors
[1,1]<stdout>:                  Ratio - ratio of maximum to minimum over all processors
[1,1]<stdout>:   Mess: number of messages sent
[1,1]<stdout>:   AvgLen: average message length (bytes)
[1,1]<stdout>:   Reduct: number of global reductions
[1,1]<stdout>:   Global: entire computation
[1,1]<stdout>:   Stage: stages of a computation. Set stages with PetscLogStagePush() and PetscLogStagePop().
[1,1]<stdout>:      %T - percent time in this phase         %F - percent flop in this phase
[1,1]<stdout>:      %M - percent messages in this phase     %L - percent message lengths in this phase
[1,1]<stdout>:      %R - percent reductions in this phase
[1,1]<stdout>:   Total Mflop/s: 10e-6 * (sum of flop over all processors)/(max time over all processors)
[1,1]<stdout>:------------------------------------------------------------------------------------------------------------------------
[1,1]<stdout>:Event                Count      Time (sec)     Flop                              --- Global ---  --- Stage ----  Total[1,1]<stdout>:
[1,1]<stdout>:                   Max Ratio  Max     Ratio   Max  Ratio  Mess   AvgLen  Reduct  %T %F %M %L %R  %T %F %M %L %R Mflop/s[1,1]<stdout>:
[1,1]<stdout>:------------------------------------------------------------------------------------------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:--- Event Stage 0: Main Stage
[1,1]<stdout>:
[1,0]<stdout>:
[1,1]<stdout>:MatMult               27 1.0 3.4515e-02 1.0 2.19e+07 1.0 0.0e+00 0.0e+00 0.0e+00 14 15  0  0  0  14 15  0  0  0   636
[1,1]<stdout>:MatSolve              27 1.0 4.1978e-02 1.0 2.19e+07 1.0 0.0e+00 0.0e+00 0.0e+00 17 15  0  0  0  17 15  0  0  0   523[1,1]<stdout>:
[1,1]<stdout>:MatLUFactorNum         1 1.0 3.3223e-03 1.0 1.22e+06 1.0 0.0e+00 0.0e+00 0.0e+00  1  1  0  0  0   1  1  0  0  0   366[1,1]<stdout>:
[1,0]<stdout>:MatILUFactorSym        1 1.0 4.2682e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  2  0  0  0  0   2  0  0  0  0     0
[1,0]<stdout>:MatAssemblyBegin       2 1.0 1.7900e-06 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,1]<stdout>:MatILUFactorSym        1 1.0 4.8733e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  2  0  0  0  0   2  0  0  0  0     0
[1,1]<stdout>:MatAssemblyBegin       2 1.0 2.0540e-06 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
[1,0]<stdout>:
[1,1]<stdout>:MatAssemblyEnd         2 1.0 2.6890e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  1  0  0  0  0   1  0  0  0  0     0[1,0]<stdout>:MatAssemblyEnd         2 1.0 2.6623e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  1  0  0  0  0   1  0  0  0  0     0
[1,1]<stdout>:
[1,0]<stdout>:MatGetRowIJ            1 1.0 5.5900e-07 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,1]<stdout>:MatGetRowIJ            1 1.0 6.7300e-07 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,0]<stdout>:
[1,1]<stdout>:
[1,0]<stdout>:MatGetOrdering         1 1.0 7.3439e-04 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,1]<stdout>:MatGetOrdering         1 1.0 7.5754e-04 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,1]<stdout>:
[1,0]<stdout>:
[1,1]<stdout>:KSPSetUp               1 1.0 1.5892e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  1  0  0  0  0   1  0  0  0  0     0[1,0]<stdout>:KSPSetUp               1 1.0 1.5760e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  1  0  0  0  0   1  0  0  0  0     0
[1,1]<stdout>:
[1,0]<stdout>:KSPSolve               1 1.0 1.5738e-01 1.0 1.42e+08 1.0 0.0e+00 0.0e+00 0.0e+00 64 98  0  0  0  64 98  0  0  0   900
[1,0]<stdout>:KSPGMRESOrthog        26 1.0 6.9523e-02 1.0 8.99e+07 1.0 0.0e+00 0.0e+00 0.0e+00 28 62  0  0  0  28 62  0  0  0  1292[1,1]<stdout>:KSPSolve               1 1.0 1.5852e-01 1.0 1.42e+08 1.0 0.0e+00 0.0e+00 0.0e+00 64 98  0  0  0  64 98  0  0  0   893
[1,1]<stdout>:KSPGMRESOrthog        26 1.0 6.9513e-02 1.0 8.99e+07 1.0 0.0e+00 0.0e+00 0.0e+00 28 62  0  0  0  28 62  0  0  0  1293[1,0]<stdout>:
[1,1]<stdout>:
[1,0]<stdout>:DMCreateMat            1 1.0 3.9307e-02 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00 16  0  0  0  0  16  0  0  0  0     0[1,1]<stdout>:DMCreateMat            1 1.0 3.9312e-02 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00 16  0  0  0  0  16  0  0  0  0     0
[1,0]<stdout>:
[1,1]<stdout>:SFSetGraph             1 1.0 1.8203e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  1  0  0  0  0   1  0  0  0  0     0[1,1]<stdout>:
[1,0]<stdout>:SFSetGraph             1 1.0 1.8186e-03 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  1  0  0  0  0   1  0  0  0  0     0[1,1]<stdout>:VecMDot               26 1.0 3.2629e-02 1.0 4.49e+07 1.0 0.0e+00 0.0e+00 0.0e+00 13 31  0  0  0  13 31  0  0  0  1377[1,1]<stdout>:
[1,1]<stdout>:VecNorm               28 1.0 5.8254e-04 1.0 3.58e+06 1.0 0.0e+00 0.0e+00 0.0e+00  0  2  0  0  0   0  2  0  0  0  6152[1,1]<stdout>:
[1,1]<stdout>:VecScale              27 1.0 8.2826e-04 1.0 1.73e+06 1.0 0.0e+00 0.0e+00 0.0e+00  0  1  0  0  0   0  1  0  0  0  2086[1,1]<stdout>:
[1,1]<stdout>:VecCopy                1 1.0 1.6448e-04 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,1]<stdout>:
[1,1]<stdout>:VecSet                 2 1.0 7.6826e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0[1,1]<stdout>:
[1,1]<stdout>:VecAXPY                2 1.0 1.2586e-04 1.0 2.56e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0  2034[1,1]<stdout>:
[1,1]<stdout>:VecMAXPY              27 1.0 3.9483e-02 1.0 4.83e+07 1.0 0.0e+00 0.0e+00 0.0e+00 16 34  0  0  0  16 34  0  0  0  1222[1,0]<stdout>:
[1,1]<stdout>:
[1,0]<stdout>:VecMDot               26 1.0 3.1364e-02 1.0 4.49e+07 1.0 0.0e+00 0.0e+00 0.0e+00 13 31  0  0  0  13 31  0  0  0  1432[1,1]<stdout>:VecNormalize          27 1.0 1.4693e-03 1.0 5.18e+06 1.0 0.0e+00 0.0e+00 0.0e+00  1  4  0  0  0   1  4  0  0  0  3528
[1,0]<stdout>:
[1,0]<stdout>:VecNorm               28 1.0 6.5911e-04 1.0 3.58e+06 1.0 0.0e+00 0.0e+00 0.0e+00  0  2  0  0  0   0  2  0  0  0  5438[1,0]<stdout>:
[1,0]<stdout>:VecScale              27 1.0 8.8440e-04 1.0 1.73e+06 1.0 0.0e+00 0.0e+00 0.0e+00  0  1  0  0  0   0  1  0  0  0  1954[1,0]<stdout>:
[1,1]<stdout>:PCSetUp                1 1.0 9.0998e-03 1.0 1.22e+06 1.0 0.0e+00 0.0e+00 0.0e+00  4  1  0  0  0   4  1  0  0  0   134[1,1]<stdout>:
[1,1]<stdout>:PCApply               27 1.0 4.2022e-02 1.0 2.19e+07 1.0 0.0e+00 0.0e+00 0.0e+00 17 15  0  0  0  17 15  0  0  0   522[1,1]<stdout>:
[1,1]<stdout>:------------------------------------------------------------------------------------------------------------------------[1,0]<stdout>:VecCopy                1 1.0 1.1624e-04 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
[1,1]<stdout>:
[1,0]<stdout>:VecSet                 2 1.0 7.4156e-05 1.0 0.00e+00 0.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0     0
[1,1]<stdout>:
[1,0]<stdout>:VecAXPY                2 1.0 1.2344e-04 1.0 2.56e+05 1.0 0.0e+00 0.0e+00 0.0e+00  0  0  0  0  0   0  0  0  0  0  2074
[1,1]<stdout>:Memory usage is given in bytes:
[1,1]<stdout>:
[1,1]<stdout>:Object Type          Creations   Destructions     Memory  Descendants' Mem.
[1,0]<stdout>:VecMAXPY              27 1.0 4.0683e-02 1.0 4.83e+07 1.0 0.0e+00 0.0e+00 0.0e+00 17 34  0  0  0  17 34  0  0  0  1186
[1,1]<stdout>:Reports information only for process 0.
[1,1]<stdout>:
[1,1]<stdout>:--- Event Stage 0: Main Stage
[1,1]<stdout>:
[1,1]<stdout>:       Krylov Solver     1              1        18872     0.
[1,0]<stdout>:VecNormalize          27 1.0 1.6255e-03 1.0 5.18e+06 1.0 0.0e+00 0.0e+00 0.0e+00  1  4  0  0  0   1  4  0  0  0  3189
[1,1]<stdout>:     DMKSP interface     1              1          664     0.
[1,1]<stdout>:              Matrix     3              3     12835716     0.
[1,1]<stdout>:    Distributed Mesh     1              1         5584     0.
[1,1]<stdout>:           Index Set     5              5      1028520     0.
[1,1]<stdout>:   IS L to G Mapping     1              1       256680     0.
[1,1]<stdout>:   Star Forest Graph     3              3         3624     0.
[1,1]<stdout>:     Discrete System     1              1          968     0.
[1,1]<stdout>:           Weak Form     1              1          624     0.
[1,1]<stdout>:              Vector    40             40     19010176     0.
[1,1]<stdout>:      Preconditioner     1              1         1032     0.
[1,0]<stdout>:PCSetUp                1 1.0 8.4136e-03 1.0 1.22e+06 1.0 0.0e+00 0.0e+00 0.0e+00  3  1  0  0  0   3  1  0  0  0   145[1,1]<stdout>:              Viewer     1              0            0     0.
[1,1]<stdout>:========================================================================================================================
[1,1]<stdout>:Average time to get PetscTime(): 5.96e-08
[1,1]<stdout>:#PETSc Option Table entries:
[1,1]<stdout>:-da_grid_x 40
[1,1]<stdout>:-da_grid_y 40
[1,1]<stdout>:-da_grid_z 40
[1,1]<stdout>:-log_view
[1,1]<stdout>:#End of PETSc Option Table entries
[1,1]<stdout>:Compiled without FORTRAN kernels
[1,1]<stdout>:Compiled with full precision matrices (default)
[1,1]<stdout>:sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
[1,1]<stdout>:Configure options: --download-mpich --with-debugging=0[1,0]<stdout>:
[1,1]<stdout>:
[1,1]<stdout>:-----------------------------------------
[1,1]<stdout>:Libraries compiled on 2022-07-03 14:50:55 on carlosadir 
[1,1]<stdout>:Machine characteristics: Linux-5.4.0-52-generic-x86_64-with-glibc2.29
[1,1]<stdout>:Using PETSc directory: /home/carlosadir/Git/petsc
[1,1]<stdout>:Using PETSc arch: arch-linux-c-opt
[1,1]<stdout>:-----------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:Using C compiler: /home/carlosadir/Git/petsc/arch-linux-c-opt/bin/mpicc  -Wall -Wwrite-strings -Wno-unknown-pragmas -Wno-lto-type-mismatch -fstack-protector -fvisibility=hidden -g -O   
[1,1]<stdout>:Using Fortran compiler: /home/carlosadir/Git/petsc/arch-linux-c-opt/bin/mpif90  -Wall -ffree-line-length-0 -Wno-lto-type-mismatch -Wno-unused-dummy-argument -g -O    
[1,1]<stdout>:-----------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:Using include paths: -I/home/carlosadir/Git/petsc/include -I/home/carlosadir/Git/petsc/arch-linux-c-opt/include
[1,1]<stdout>:-----------------------------------------
[1,1]<stdout>:
[1,1]<stdout>:Using C linker: /home/carlosadir/Git/petsc/arch-linux-c-opt/bin/mpicc
[1,1]<stdout>:Using Fortran linker: /home/carlosadir/Git/petsc/arch-linux-c-opt/bin/mpif90
[1,1]<stdout>:Using libraries: -Wl,-rpath,/home/carlosadir/Git/petsc/arch-linux-c-opt/lib -L/home/carlosadir/Git/petsc/arch-linux-c-opt/lib -lpetsc -Wl,-rpath,/home/carlosadir/Git/petsc/arch-linux-c-opt/lib -L/home/carlosadir/Git/petsc/arch-linux-c-opt/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9 -llapack -lblas -lpthread -lm -lX11 -lstdc++ -ldl -lmpifort -lmpi -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl
[1,1]<stdout>:-----------------------------------------
[1,1]<stdout>:
[1,0]<stdout>:PCApply               27 1.0 4.0910e-02 1.0 2.19e+07 1.0 0.0e+00 0.0e+00 0.0e+00 17 15  0  0  0  17 15  0  0  0   536[1,0]<stdout>:
[1,0]<stdout>:------------------------------------------------------------------------------------------------------------------------[1,0]<stdout>:
[1,0]<stdout>:
[1,0]<stdout>:Memory usage is given in bytes:
[1,0]<stdout>:
[1,0]<stdout>:Object Type          Creations   Destructions     Memory  Descendants' Mem.
[1,0]<stdout>:Reports information only for process 0.
[1,0]<stdout>:
[1,0]<stdout>:--- Event Stage 0: Main Stage
[1,0]<stdout>:
[1,0]<stdout>:       Krylov Solver     1              1        18872     0.
[1,0]<stdout>:     DMKSP interface     1              1          664     0.
[1,0]<stdout>:              Matrix     3              3     12835716     0.
[1,0]<stdout>:    Distributed Mesh     1              1         5584     0.
[1,0]<stdout>:           Index Set     5              5      1028520     0.
[1,0]<stdout>:   IS L to G Mapping     1              1       256680     0.
[1,0]<stdout>:   Star Forest Graph     3              3         3624     0.
[1,0]<stdout>:     Discrete System     1              1          968     0.
[1,0]<stdout>:           Weak Form     1              1          624     0.
[1,0]<stdout>:              Vector    40             40     19010176     0.
[1,0]<stdout>:      Preconditioner     1              1         1032     0.
[1,0]<stdout>:              Viewer     1              0            0     0.
[1,0]<stdout>:========================================================================================================================
[1,0]<stdout>:Average time to get PetscTime(): 6.04e-08
[1,0]<stdout>:#PETSc Option Table entries:
[1,0]<stdout>:-da_grid_x 40
[1,0]<stdout>:-da_grid_y 40
[1,0]<stdout>:-da_grid_z 40
[1,0]<stdout>:-log_view
[1,0]<stdout>:#End of PETSc Option Table entries
[1,0]<stdout>:Compiled without FORTRAN kernels
[1,0]<stdout>:Compiled with full precision matrices (default)
[1,0]<stdout>:sizeof(short) 2 sizeof(int) 4 sizeof(long) 8 sizeof(void*) 8 sizeof(PetscScalar) 8 sizeof(PetscInt) 4
[1,0]<stdout>:Configure options: --download-mpich --with-debugging=0
[1,0]<stdout>:-----------------------------------------
[1,0]<stdout>:Libraries compiled on 2022-07-03 14:50:55 on carlosadir 
[1,0]<stdout>:Machine characteristics: Linux-5.4.0-52-generic-x86_64-with-glibc2.29
[1,0]<stdout>:Using PETSc directory: /home/carlosadir/Git/petsc
[1,0]<stdout>:Using PETSc arch: arch-linux-c-opt
[1,0]<stdout>:-----------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:Using C compiler: /home/carlosadir/Git/petsc/arch-linux-c-opt/bin/mpicc  -Wall -Wwrite-strings -Wno-unknown-pragmas -Wno-lto-type-mismatch -fstack-protector -fvisibility=hidden -g -O   
[1,0]<stdout>:Using Fortran compiler: /home/carlosadir/Git/petsc/arch-linux-c-opt/bin/mpif90  -Wall -ffree-line-length-0 -Wno-lto-type-mismatch -Wno-unused-dummy-argument -g -O    
[1,0]<stdout>:-----------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:Using include paths: -I/home/carlosadir/Git/petsc/include -I/home/carlosadir/Git/petsc/arch-linux-c-opt/include
[1,0]<stdout>:-----------------------------------------
[1,0]<stdout>:
[1,0]<stdout>:Using C linker: /home/carlosadir/Git/petsc/arch-linux-c-opt/bin/mpicc
[1,0]<stdout>:Using Fortran linker: /home/carlosadir/Git/petsc/arch-linux-c-opt/bin/mpif90
[1,0]<stdout>:Using libraries: -Wl,-rpath,/home/carlosadir/Git/petsc/arch-linux-c-opt/lib -L/home/carlosadir/Git/petsc/arch-linux-c-opt/lib -lpetsc -Wl,-rpath,/home/carlosadir/Git/petsc/arch-linux-c-opt/lib -L/home/carlosadir/Git/petsc/arch-linux-c-opt/lib -Wl,-rpath,/usr/lib/gcc/x86_64-linux-gnu/9 -L/usr/lib/gcc/x86_64-linux-gnu/9 -llapack -lblas -lpthread -lm -lX11 -lstdc++ -ldl -lmpifort -lmpi -lgfortran -lm -lgfortran -lm -lgcc_s -lquadmath -lstdc++ -ldl
[1,0]<stdout>:-----------------------------------------
[1,0]<stdout>:
[1,1]<stderr>:real [1,1]<stderr>:0.27
[1,1]<stderr>:user 0.39
[1,1]<stderr>:sys 0.13
[1,0]<stderr>:real [1,0]<stderr>:0.27
[1,0]<stderr>:user 0.39
[1,0]<stderr>:sys 0.13
